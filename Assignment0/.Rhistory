l <- append(l,x)
x <- 0.5*(x+mu/x)
}
return(l)
return(x)
}
}
sqrt_function(-1, 2)
sqrt_function(33, 2)
sqrt_function <- function(mu, x){
delta <- 0.0000000001
l <- c()
if (mu < 0){
print("mu must be a positive number")
}
else{
while (abs(x^2-mu) > delta){
l <- append(l,x)
x <- 0.5*(x+mu/x)
}
return(l)
return(x)
}
}
sqrt_function(33, 2)
sqrt_function <- function(mu, x){
delta <- 0.0000000000001
l <- c()
if (mu < 0){
print("mu must be a positive number")
}
else{
while (abs(x^2-mu) > delta){
l <- append(l,x)
x <- 0.5*(x+mu/x)
}
return(l)
return(x)
}
}
sqrt_function(33, 2)
sqrt_function <- function(mu, x){
delta <- 0.0000000000001
l <- c()
if (mu < 0){
print("mu must be a positive number")
}
else{
while (abs(x^2-mu) > delta){
l <- append(l,x)
x <- 0.5*(x+mu/x)
}
return(l)
}
return(x)
}
sqrt_function(33, 2)
sqrt_function <- function(mu, x){
delta <- 0.0000000000001
l <- c()
if (mu < 0){
print("mu must be a positive number")
}
else{
while (abs(x^2-mu) > delta){
l <- append(l,x)
x <- 0.5*(x+mu/x)
}
return(x)
}
return(x)
}
sqrt_function(33, 2)
sqrt_function <- function(mu, x){
delta <- 0.0000000000001
l <- c()
if (mu < 0){
print("mu must be a positive number")
}
else{
while (abs(x^2-mu) > delta){
l <- append(l,x)
x <- 0.5*(x+mu/x)
}
return(l)
}
}
sqrt_function(33, 2)
sqrt_function(33, 5)
sqrt_function(0, 5)
sqrt_function <- function(mu, x){
delta <- 0.000000000000
l <- c()
if (mu < 0){
print("mu must be a positive number")
}
else{
while (abs(x^2-mu) > delta){
l <- append(l,x)
x <- 0.5*(x+mu/x)
}
return(l)
}
}
sqrt_function(3, 5)
sqrt_function <- function(mu, x){
delta <- 0.0000000001
l <- c()
if (mu < 0){
print("mu must be a positive number")
}
else{
while (abs(x^2-mu) > delta){
l <- append(l,x)
x <- 0.5*(x+mu/x)
}
return(l)
}
}
sqrt_function(3, 5)
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
pacman::p_load(brms, cmdstanr, janitor, tidyverse)
demo <- read_csv("demo_train.csv")
demo <- read_csv("demo_train.csv")
LU <- read_csv("LU_train.csv")
library(tidyverse)
pacman::p_load(tidyverse)
LU <- read_csv("LU_train.csv")
demo <- tidyverse::read_csv("demo_train.csv")
pacman::p_load(dplyr)
pacman::p_load(dplyr, dbplyr)
library(tidyverse)
pacman::p_load(brms, cmdstanr, janitor, dplyr, tidyverse)
demo <- read_csv("demo_train.csv")
LU <- read_csv("LU_train.csv")
token <- read_csv("token_train.csv")
demo <- demo %>%
rename(ID = Child.ID)
LU <- LU %>%
rename(ID = SUBJ, Visit = VISIT)
token <- token %>%
rename(ID = SUBJ, Visit = VISIT)
LU <- LU %>%
mutate(Visit = str_extract(LU$Visit, "\\d"))
token <- token %>%
mutate(Visit = str_extract(token$Visit, "\\d"))
View(demo)
View(LU)
View(token)
demo$ID <- str_replace_all(demo$ID, "[.]","")
LU$ID <- str_replace_all(LU$ID, "[.]","")
token$ID <- str_replace_all(token$ID, "[.]","")
demo_sub <- demo %>%
select("ID", "Visit", "Diagnosis", "Ethnicity", "Gender", "Age", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
LU_sub <- LU %>%
select("ID", "Visit", "MOT_MLU", "CHI_MLU")
token_sub <- token %>%
select("types_MOT", "types_CHI", "tokens_MOT", "tokens_CHI")
?merge
merged_df <- inner_join(demo_sub, LU_sub, token_sub, by="ID")
View(merged_df)
token_sub <- token %>%
select("ID", "Visit", "types_MOT", "types_CHI", "tokens_MOT", "tokens_CHI")
demo_sub <- demo %>%
select("ID", "Visit", "Diagnosis", "Ethnicity", "Gender", "Age", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
LU_sub <- LU %>%
select("ID", "Visit", "MOT_MLU", "CHI_MLU")
token_sub <- token %>%
select("ID", "Visit", "types_MOT", "types_CHI", "tokens_MOT", "tokens_CHI")
merged_df <- inner_join(demo_sub, LU_sub, token_sub, by="ID")
View(merged_df)
View(token_sub)
View(LU_sub)
View(demo_sub)
merged_df <- inner_join(demo_sub, LU_sub, token_sub, by="ID")
demo_sub <- demo %>%
select("ID", "Visit", "Diagnosis", "Ethnicity", "Gender", "Age", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
LU_sub <- LU %>%
select("MOT_MLU", "CHI_MLU")
token_sub <- token %>%
select("types_MOT", "types_CHI", "tokens_MOT", "tokens_CHI")
merged_df <- inner_join(demo_sub, LU_sub, token_sub, by="ID")
merged_df <- inner_join(demo_sub, LU_sub, token_sub, by="ID")
demo_sub <- demo %>%
select("ID", "Visit", "Diagnosis", "Ethnicity", "Gender", "Age", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
LU_sub <- LU %>%
select("ID", "Visit", "MOT_MLU", "CHI_MLU")
token_sub <- token %>%
select("ID", "Visit", "types_MOT", "types_CHI", "tokens_MOT", "tokens_CHI")
merged_df <- inner_join(demo_sub, LU_sub, token_sub, by="ID")
View(merged_df)
View(demo_sub)
?filter
demo_filt <- demo_sub %>%
filter(ID == "AA")
View(demo_filt)
demo_filt <- demo_sub %>%
filter(ID != "AA")
demo_sub <- demo %>%
select("ID", "Visit", "Diagnosis", "Ethnicity", "Gender", "Age", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
demo_filt <- demo_sub %>%
filter(ID != "AA" | ID != "")
demo_sub <- dem_sub %>%
filter()
merged_df <- left_join(demo_sub, LU_sub, token_sub, by="ID")
demo_sub$row_num <- seq.int(nrow(demo_sub))
demo <- read_csv("demo_train.csv")
LU <- read_csv("LU_train.csv")
token <- read_csv("token_train.csv")
demo <- demo %>%
rename(ID = Child.ID)
LU <- LU %>%
rename(ID = SUBJ, Visit = VISIT)
token <- token %>%
rename(ID = SUBJ, Visit = VISIT)
LU <- LU %>%
mutate(Visit = str_extract(LU$Visit, "\\d"))
token <- token %>%
mutate(Visit = str_extract(token$Visit, "\\d"))
demo$ID <- str_replace_all(demo$ID, "[.]","")
LU$ID <- str_replace_all(LU$ID, "[.]","")
token$ID <- str_replace_all(token$ID, "[.]","")
demo_sub <- demo %>%
select("ID", "Visit", "Diagnosis", "Ethnicity", "Gender", "Age", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
LU_sub <- LU %>%
select("ID", "Visit", "MOT_MLU", "CHI_MLU")
token_sub <- token %>%
select("ID", "Visit", "types_MOT", "types_CHI", "tokens_MOT", "tokens_CHI")
demo_sub <- demo %>%
select("ID", "Visit", "Diagnosis", "Ethnicity", "Gender", "Age", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
LU_sub <- LU %>%
select("ID", "Visit", "MOT_MLU", "CHI_MLU")
token_sub <- token %>%
select("ID", "Visit", "types_MOT", "types_CHI", "tokens_MOT", "tokens_CHI")
merged_df <- full_join(demo_sub, LU_sub, token_sub, by="ID")
merged_df <- merge(demo_sub, LU_sub, token_sub)
merged_df <- merge(demo_sub, LU_sub, token_sub, by = "ID")
?merge
merged_df <- merge(demo_sub, LU_sub, token_sub, by.x = "ID")
merged_df <- inner_join(demo_sub, LU_sub, token_sub, by.x = "ID")
merged_df <- inner_join(demo_sub, LU_sub, token_sub, by = "ID")
merged_df <- left_join(demo_sub, token_sub, by = "ID")
merged_df <- left_join(demo_sub, token_sub, by = NULL)
?as.factor
LU <- LU %>%
mutate(Visit = str_extract(LU$Visit, "\\d")) %>%
mutate(as.factor(LU$Visit) = Visit)
LU <- LU %>%
mutate(Visit = str_extract(LU$Visit, "\\d")) %>%
mutate(as.factor(LU$Visit) = Visit))
LU <- LU %>%
mutate(Visit = str_extract(LU$Visit, "\\d")) %>%
mutate(as.factor(LU$Visit))
token <- token %>%
mutate(Visit = str_extract(token$Visit, "\\d")) %>%
mutate(as.factor(token$Visit))
demo <- demo %>%
mutate(as.factor(demo$Visit))
demo <- demo %>%
rename(ID = Child.ID)
demo <- read_csv("demo_train.csv")
LU <- read_csv("LU_train.csv")
token <- read_csv("token_train.csv")
demo <- demo %>%
rename(ID = Child.ID)
LU <- LU %>%
rename(ID = SUBJ, Visit = VISIT)
token <- token %>%
rename(ID = SUBJ, Visit = VISIT)
LU <- LU %>%
mutate(Visit = str_extract(LU$Visit, "\\d")) %>%
mutate(as.factor(LU$Visit))
token <- token %>%
mutate(Visit = str_extract(token$Visit, "\\d")) %>%
mutate(as.factor(token$Visit))
demo <- demo %>%
mutate(as.factor(demo$Visit))
demo$ID <- str_replace_all(demo$ID, "[.]","")
LU$ID <- str_replace_all(LU$ID, "[.]","")
token$ID <- str_replace_all(token$ID, "[.]","")
demo_sub <- demo %>%
select("ID", "Visit", "Diagnosis", "Ethnicity", "Gender", "Age", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
LU_sub <- LU %>%
select("ID", "Visit", "MOT_MLU", "CHI_MLU")
token_sub <- token %>%
select("ID", "Visit", "types_MOT", "types_CHI", "tokens_MOT", "tokens_CHI")
merged_df <- left_join(demo_sub, token_sub, by = NULL)
token <- token %>%
mutate(Visit = str_extract(token$Visit, "\\d")) %>%
token$Visit <- as.factor(token$Visit)
token <- token %>%
mutate(Visit = str_extract(token$Visit, "\\d"))
token$Visit <- as.factor(token$Visit)
merged_df <- left_join(demo_sub, token_sub, by = NULL)
merged_df <- left_join(demo_sub, token_sub, by = "ID")
merged_df <- left_join(demo_sub, token_sub, LU_sub by = "ID")
merged_df <- left_join(demo_sub, token_sub, LU_sub by, = "ID")
merged_df <- left_join(demo_sub, token_sub, LU_sub, by = "ID")
merged_df <- left_join(demo_sub, token_sub, LU_sub, by = c("ID", "Visit"))
token <- token %>%
mutate(Visit = as.character(Visit))
LU <- LU %>%
mutate(Visit = str_extract(LU$Visit, "\\d"))
LU <- LU %>%
mutate(Visit = as.factor(Visit))
token <- token %>%
mutate(Visit = str_extract(token$Visit, "\\d"))
token <- token %>%
mutate(Visit = as.factor(Visit))
demo <- demo %>%
mutate(Visit = as.factor(Visit))
demo <- demo %>%
rename(ID = Child.ID)
demo <- read_csv("demo_train.csv")
LU <- read_csv("LU_train.csv")
token <- read_csv("token_train.csv")
demo <- demo %>%
rename(ID = Child.ID)
LU <- LU %>%
rename(ID = SUBJ, Visit = VISIT)
token <- token %>%
rename(ID = SUBJ, Visit = VISIT)
LU <- LU %>%
mutate(Visit = str_extract(LU$Visit, "\\d"))
LU <- LU %>%
mutate(Visit = as.factor(Visit))
token <- token %>%
mutate(Visit = str_extract(token$Visit, "\\d"))
token <- token %>%
mutate(Visit = as.factor(Visit))
demo <- demo %>%
mutate(Visit = as.factor(Visit))
demo$ID <- str_replace_all(demo$ID, "[.]","")
LU$ID <- str_replace_all(LU$ID, "[.]","")
token$ID <- str_replace_all(token$ID, "[.]","")
demo_sub <- demo %>%
select("ID", "Visit", "Diagnosis", "Ethnicity", "Gender", "Age", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
LU_sub <- LU %>%
select("ID", "Visit", "MOT_MLU", "CHI_MLU")
token_sub <- token %>%
select("ID", "Visit", "types_MOT", "types_CHI", "tokens_MOT", "tokens_CHI")
merged_df <- left_join(demo_sub, token_sub, LU_sub, by = c("ID", "Visit"))
?merge
merged_df <- left_join(demo_sub, token_sub, LU_sub, by = c("ID", "Visit"))
View(merged_df)
merged_df <- inner_join(demo_sub, token_sub, LU_sub, by = c("ID", "Visit"))
View(merged_df)
visit1_df <- merged_df %>%
filter(Visit == 1)
View(visit1_df)
visit1_df <- merged_df %>%
filter(Visit == 1) %>%
select("ID", "Visit", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socilaization")
visit1_df <- merged_df %>%
filter(Visit == 1) %>%
select("ID", "Visit", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
View(visit1_df)
visit1_df <- merged_df %>%
filter(Visit == 1) %>%
select("ID", "Visit", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization") %>%
rename(ADOS1 = ADOS)
visit1_df <- merged_df %>%
filter(Visit == 1) %>%
select("ID", "Visit", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization") %>%
rename(ADOS1 = ADOS, MullenRaw1 = MullenRaw, ExpressiveLangRaw1 = ExpressiveLangRaw, Socialization1 = Socialization)
visit1_df <- merged_df %>%
filter(Visit == 1) %>%
select("ID", "Visit", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization") %>%
rename(ADOS1 = ADOS, MullenRaw1 = MullenRaw, ExpressiveLangRaw1 = ExpressiveLangRaw, Socialization1 = Socialization) %>%
select("ID", "ADOS1", "MullenRaw1", "ExpressiveLangRaw1", "Socialization1")
final_merge <- inner_join(merged_df, visit1_df, by = "ID")
View(final_merge)
?replace
final_merge$Gender[final_merge$Gender == 1] <- "Male"
final_merge$Gender[final_merge$Gender == 1, ifelse] <- "Male", "Female"
final_merge$Gender[final_merge$Gender == 1, ifelse] <- ("Male" "Female")
final_merge$Gender[final_merge$Gender == 1] <- "Male"
final_merge$Gender[final_merge$Gender == 2] <- "Female"
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
pacman::p_load(brms, cmdstanr, janitor, dplyr, tidyverse)
demo <- read_csv("demo_train.csv")
demo <- read_csv("demo_train.csv")
library(tidyverse)
pacman::p_load(dbplyr)
pacman::p_load(brms, cmdstanr, janitor, dplyr, tidyverse)
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
library(brms, cmdstanr, tidyverse)
library(brms, cmdstanr, tidyverse)
pacman::p_load(brms, cmdstanr, tidyverse)
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
df <- read_csv("vowel_space_area_data.csv")
Articulation_f3 <- bf(ArticulationS ~ 1 + Register + (1+Register|Subject))
get_prior(Articulation_f3,
data = df,
family = gaussian)
Articulation_p3 <- c(
prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = sd, coef = Intercept, group = Subject),
prior(normal(0, 0.3), class = b),
prior(normal(0, 1), class = sd, coef = RegisterIDS, group = Subject),
prior(normal(1, 0.5), class = sigma),
prior(lkj(2), class = cor))
Articulation_m3_prior <-
brm(
Articulation_f3,
data = df,
save_pars = save_pars(all = TRUE),
family = gaussian,
prior = Articulation_p3,
file = "Articulation_m3_prior",
#refit = "on_change",
sample_prior = "only",
iter = 5000,
warmup = 1000,
cores = 2,
chains = 2,
backend = "cmdstanr",
threads = threading(2),
control = list(
adapt_delta = 0.999,
max_treedepth = 20))
pacman::p_load(brms, cmdstanr, tidyverse)
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
Articulation_p3 <- c(
prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = sd, coef = Intercept, group = Subject),
prior(normal(0, 0.3), class = b),
prior(normal(0, 1), class = sd, coef = RegisterIDS, group = Subject),
prior(normal(1, 0.5), class = sigma),
prior(lkj(2), class = cor))
pacman::p_load(brms, cmdstanr, tidyverse)
Articulation_p3 <- c(
prior(normal(0, 1), class = Intercept),
prior(normal(0, 1), class = sd, coef = Intercept, group = Subject),
prior(normal(0, 0.3), class = b),
prior(normal(0, 1), class = sd, coef = RegisterIDS, group = Subject),
prior(normal(1, 0.5), class = sigma),
prior(lkj(2), class = cor))
Articulation_m3_prior <-
brm(
Articulation_f3,
data = df,
save_pars = save_pars(all = TRUE),
family = gaussian,
prior = Articulation_p3,
file = "Articulation_m3_prior",
#refit = "on_change",
sample_prior = "only",
iter = 5000,
warmup = 1000,
cores = 2,
chains = 2,
backend = "cmdstanr",
threads = threading(2),
control = list(
adapt_delta = 0.999,
max_treedepth = 20))
install_cmdstan()
setwd("~/CogSci/3. Semester/Methods3/Assignment0")
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
pacman::p_load(brms, cmdstanr, janitor, dplyr, tidyverse, digest, knitr, hash)
demo <- read_csv("demo_train.csv")
LU <- read_csv("LU_train.csv")
token <- read_csv("token_train.csv")
demo <- demo %>%
rename(ID = Child.ID)
LU <- LU %>%
rename(ID = SUBJ, Visit = VISIT)
token <- token %>%
rename(ID = SUBJ, Visit = VISIT)
LU <- LU %>%
mutate(Visit = str_extract(LU$Visit, "\\d"))
LU <- LU %>%
mutate(Visit = as.factor(Visit))
token <- token %>%
mutate(Visit = str_extract(token$Visit, "\\d"))
token <- token %>%
mutate(Visit = as.factor(Visit))
demo <- demo %>%
mutate(Visit = as.factor(Visit))
demo$ID <- str_replace_all(demo$ID, "[.]","")
LU$ID <- str_replace_all(LU$ID, "[.]","")
token$ID <- str_replace_all(token$ID, "[.]","")
demo_sub <- demo %>%
select("ID", "Visit", "Diagnosis", "Ethnicity", "Gender", "Age", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization")
LU_sub <- LU %>%
select("ID", "Visit", "MOT_MLU", "CHI_MLU")
token_sub <- token %>%
select("ID", "Visit", "types_MOT", "types_CHI", "tokens_MOT", "tokens_CHI")
merged_df <- inner_join(demo_sub, token_sub, LU_sub, by = c("ID", "Visit"))
visit1_df <- merged_df %>%
filter(Visit == 1) %>%
select("ID", "Visit", "ADOS", "MullenRaw", "ExpressiveLangRaw", "Socialization") %>%
rename(ADOS1 = ADOS, MullenRaw1 = MullenRaw, ExpressiveLangRaw1 = ExpressiveLangRaw, Socialization1 = Socialization) %>%
select("ID", "ADOS1", "MullenRaw1", "ExpressiveLangRaw1", "Socialization1")
final_merge <- inner_join(merged_df, visit1_df, by = "ID")
final_merge$Gender[final_merge$Gender == 1] <- "Male"
final_merge$Gender[final_merge$Gender == 2] <- "Female"
final_merge$Diagnosis[final_merge$Diagnosis == "A"] <- "ASD"
final_merge$Diagnosis[final_merge$Diagnosis == "B"] <- "TD"
vSha1 <- Vectorize(sha1)
SeedForDigest = 200
final_merge$ID = vSha1(final_merge$ID, algo=c("sha1"), serialize=FALSE, file=FALSE,
length=Inf, skip="auto", ascii=FALSE, raw=FALSE, seed=SeedForDigest)
write.csv(final_merge, file = "clean.csv", row.names = F)
View(final_merge)
final_merge$ID = vSha1(final_merge$ID, algo=c("rcr32"), serialize=FALSE, file=FALSE,
length=Inf, skip="auto", ascii=FALSE, raw=FALSE, seed=SeedForDigest)
final_merge$ID = vSha1(final_merge$ID, algo=c("crc32"), serialize=FALSE, file=FALSE,
length=Inf, skip="auto", ascii=FALSE, raw=FALSE, seed=SeedForDigest)
